install.packages("world.cities")
install.packages("maps")
library("maps")
data("world.cities")
seq(0, 1, length = 10)
seq(0, 1, length = 3)
??phat
sqrt(4)
10^2
1/sqrt(100)
sqrt(3)
1/sqrt(3)
round(1/sqrt(3))
round(1/sqrt(10,3))
1/10^1
round(1/10^1,3)
round(1/10^2,3)
round(1/10^3,3)
round(1/sqrt(10^3),3)
round(1/sqrt(10^1),3)
x1
data(sleep)
x1 <- sleep$extra[sleep$group == 1]
x2 <- sleep$extra[sleep$group == 2]
n1 <- length(x1)
n2 <- length(x2)
sp <- sqrt( ((n1 - 1) * sd(x1)^2 + (n2-1) * sd(x2)^2) / (n1 + n2-2))
md <- mean(x1) - mean(x2)
semd <- sp * sqrt(1 / n1 + 1/n2)
md + c(-1, 1) * qt(.975, n1 + n2 - 2) * semd
t.test(x1, x2, paired = FALSE, var.equal = TRUE)$conf
t.test(x1, x2, paired = TRUE)$conf
plot(c(0.5, 2.5), range(x1, x2), type = "n", frame = FALSE, xlab = "group", ylab = "Extra", axes = FALSE)
axis(2)
axis(1, at = 1:2, labels = c("Group 1", "Group 2"))
for (i in 1 : n1) lines(c(1, 2), c(x1[i], x2[i]), lwd = 2, col = "red")
for (i in 1 : n1) points(c(1, 2), c(x1[i], x2[i]), lwd = 2, col = "black", bg = "salmon", pch = 21, cex = 3)
x1
x2
sort(x1)
sort(x2)
sleep
sort(x1)
sort(x2)
x1
x2
??t.test
??power.t.test
set.seed(1010093)
pValues <- rep(NA,1000)
for(i in 1:1000){
y <- rnorm(20)
x <- rnorm(20)
pValues[i] <- summary(lm(y ~ x))$coeff[2,4]
}
summary(lm(y ~ x))$coeff[2,4]
y <- rnorm(20)
x <- rnorm(20)
summary(lm(y ~ x))$coeff[2,4]
lm(y ~ x))$coeff[2,4]
summary(lm(y ~ x))$coeff[2,4]
library(UsingR,quietly = TRUE,verbose = FALSE)
data(father.son)
x <- father.son$sheight
n <- length(x)
theta <- median(x)
jk <- sapply(1 : n,
function(i) median(x[-i])
)
thetaBar <- mean(jk)
biasEst <- (n - 1) * (thetaBar - theta)
seEst <- sqrt((n - 1) * mean((jk - thetaBar)^2))
seESt
library(bootstrap)
temp <- jackknife(x, median)
c(temp$jack.bias, temp$jack.se)
B <- 1000
resamples <- matrix(sample(x,n * B,replace = TRUE),B, n)
library(bootstrap)
temp <- jackknife(x, median)
library(UsingR,quietly = TRUE,verbose = FALSE)
data(father.son)
x <- father.son$sheight
n <- length(x)
theta <- median(x)
jk <- sapply(1:n, function(i) median(x[-i])
)
thetaBar <- mean(jk)
biasEst <- (n - 1) * (thetaBar - theta)
seEst <- sqrt((n - 1) * mean((jk - thetaBar)^2))
c(biasEst, seEst)
library(bootstrap)
temp <- jackknife(x, median)
c(temp$jack.bias, temp$jack.se)
B <- 1000
resamples <- matrix(sample(x,n * B,replace = TRUE),B, n)
medians <- apply(resamples, 1, median)
sd(medians)
quantile(medians, c(.025, .975))
x
head(x)
resamples
medians
??cut
setwd("D:/Data Science/r/CharRecognition")
if(!is.installed("tesseract"))
install.packages("tesseract")
is.installed <- function(mypkg) is.element(mypkg, installed.packages()[,1])
if(!is.installed("tesseract"))
install.packages("tesseract")
library("tesseract")
text <- ocr("data/imagemExemplo.png")
cat(text)
text <- ocr("data/imagemExemplo.png")
text <- ocr("data/imagemExemplo2.png")
cat(text)
text <- ocr("data/imagemExemplo3.png")
cat(text)
