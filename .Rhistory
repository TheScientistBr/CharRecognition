par(mar=rep(0.1,4))
plot(x,y,col="blue",pch=19,cex=2)
points(mean(x[1:4]),mean(y[1:4]),col="orange",pch=3,lwd=3,cex=3)
points(mean(x[5:8]),mean(y[5:8]),col="orange",pch=3,lwd=3,cex=3)
segments(mean(x[1:4]),mean(y[1:4]),mean(x[5:8]),mean(y[5:8]),lwd=3,col="orange")
dataFrame <- data.frame(x=x,y=y)
set.seed(143)
dataMatrix <- as.matrix(dataFrame)[sample(1:12),]
heatmap(dataMatrix)
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
par(mar=rep(0.2,4))
plot(x,y,col="blue",pch=19,cex=2)
text(x+0.05,y+0.05,labels=as.character(1:12))
cx <- c(1,1.8,2.5)
cy <- c(2,1,1.5)
points(cx,cy,col=c("red","orange","purple"),pch=3,cex=2,lwd=2)
par(mar=rep(0.2,4))
plot(x,y,col="blue",pch=19,cex=2)
cols1 <- c("red","orange","purple")
text(x+0.05,y+0.05,labels=as.character(1:12))
cx <- c(1,1.8,2.5)
cy <- c(2,1,1.5)
points(cx,cy,col=cols1,pch=3,cex=2,lwd=2)
distTmp <- matrix(NA,nrow=3,ncol=12)
distTmp[1,] <- (x-cx[1])^2 + (y-cy[1])^2
distTmp[2,] <- (x-cx[2])^2 + (y-cy[2])^2
distTmp[3,] <- (x-cx[3])^2 + (y-cy[3])^2
newClust <- apply(distTmp,2,which.min)
points(x,y,pch=19,cex=2,col=cols1[newClust]
)
par(mar=rep(0.2,4))
plot(x,y,col="blue",pch=19,cex=2)
cols1 <- c("red","orange","purple")
text(x+0.05,y+0.05,labels=as.character(1:12))
distTmp <- matrix(NA,nrow=3,ncol=12)
distTmp[1,] <- (x-cx[1])^2 + (y-cy[1])^2
distTmp[2,] <- (x-cx[2])^2 + (y-cy[2])^2
distTmp[3,] <- (x-cx[3])^2 + (y-cy[3])^2
newClust <- apply(distTmp,2,which.min)
points(x,y,pch=19,cex=2,col=cols1[newClust])
newCx <- tapply(x,newClust,mean)
newCy <- tapply(y,newClust,mean)
cx <- c(1,1.8,2.5)
cy <- c(2,1,1.5)
points(newCx,newCy,col=cols1,pch=3,cex=2,lwd=2)
points(newCx,newCy,col=cols1,pch=3,cex=2,lwd=2)
points(newCx,newCy,col=cols1,pch=3,cex=2,lwd=2)
distTmp <- matrix(NA,nrow=3,ncol=12)
distTmp[1,] <- (x-newCx[1])^2 + (y-newCy[1])^2
distTmp[2,] <- (x-newCx[2])^2 + (y-newCy[2])^2
distTmp[3,] <- (x-newCx[3])^2 + (y-newCy[3])^2
newClust2 <- apply(distTmp,2,which.min)
points(x,y,pch=19,cex=2,col=cols1[newClust2])
finalCx <- tapply(x,finalClust,mean)
finalClust <- apply(distTmp,2,which.min)
finalCx <- tapply(x,finalClust,mean)
finalCy <- tapply(y,finalClust,mean)
points(finalCx,finalCy,col=cols1,pch=3,cex=2,lwd=2)
dataFrame <- data.frame(x,y)
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
distTmp <- matrix(NA,nrow=3,ncol=12)
distTmp[1,] <- (x-newCx[1])^2 + (y-newCy[1])^2
distTmp[2,] <- (x-newCx[2])^2 + (y-newCy[2])^2
distTmp[3,] <- (x-newCx[3])^2 + (y-newCy[3])^2
newClust2 <- apply(distTmp,2,which.min)
points(x,y,pch=19,cex=2,col=cols1[newClust2])
distTmp <- matrix(NA,nrow=3,ncol=12)
distTmp[1,] <- (x-newCx[1])^2 + (y-newCy[1])^2
distTmp[2,] <- (x-newCx[2])^2 + (y-newCy[2])^2
distTmp[3,] <- (x-newCx[3])^2 + (y-newCy[3])^2
finalClust <- apply(distTmp,2,which.min)
finalCx <- tapply(x,finalClust,mean)
finalCy <- tapply(y,finalClust,mean)
points(finalCx,finalCy,col=cols1,pch=3,cex=2,lwd=2)
points(x,y,pch=19,cex=2,col=cols1[finalClust])
dataFrame <- data.frame(x,y)
kmeansObj <- kmeans(dataFrame,centers=3)
names(kmeansObj)
kmeansObj$cluster
kmeansObj$centers
par(mar=rep(0.2,4))
plot(x,y,col=kmeansObj$cluster,pch=19,cex=2)
points(kmeansObj$centers,col=1:3,pch=3,cex=3,lwd=3)
set.seed(1234)
dataMatrix <- as.matrix(dataFrame)[sample(1:12),]
kmeansObj <- kmeans(dataMatrix,centers=3)
par(mfrow=c(1,2), mar = c(2, 4, 0.1, 0.1))
image(t(dataMatrix)[,nrow(dataMatrix):1],yaxt="n")
image(t(dataMatrix)[,order(kmeansObj$cluster)],yaxt="n")
set.seed(12345); par(mar=rep(0.2,4))
dataMatrix <- matrix(rnorm(400),nrow=40)
image(1:10,1:40,t(dataMatrix)[,nrow(dataMatrix):1])
par(mar=rep(0.2,4))
heatmap(dataMatrix)
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
dataMatrix
par(mar=rep(0.2,4))
image(1:10,1:40,t(dataMatrix)[,nrow(dataMatrix):1])
par(mar=rep(0.2,4))
heatmap(dataMatrix)
hh <- hclust(dist(dataMatrix)); dataMatrixOrdered <- dataMatrix[hh$order,]
par(mfrow=c(1,3))
image(t(dataMatrixOrdered)[,nrow(dataMatrixOrdered):1])
plot(rowMeans(dataMatrixOrdered),40:1,,xlab="Row Mean",ylab="Row",pch=19)
plot(colMeans(dataMatrixOrdered),xlab="Column",ylab="Column Mean",pch=19)
source('~/.active-rstudio-document')
svd1 <- svd(scale(dataMatrixOrdered))
par(mfrow=c(1,3))
image(t(dataMatrixOrdered)[,nrow(dataMatrixOrdered):1])
svd1$d
svd1$u
svd1$v
plot(svd1$u[,1],40:1,,xlab="Row",ylab="First left singular vector",pch=19)
plot(svd1$v[,1],xlab="Column",ylab="First right singular vector",pch=19)
par(mfrow=c(1,2))
plot(svd1$d,xlab="Column",ylab="Singular value",pch=19)
plot(svd1$d^2/sum(svd1$d^2),xlab="Column",
ylab="Prop. of variance explained",pch=19)
svd1 <- svd(scale(dataMatrixOrdered))
pca1 <- prcomp(dataMatrixOrdered,scale=TRUE)
plot(pca1$rotation[,1],svd1$v[,1],pch=19,xlab="Principal Component 1",ylab="Right Singular Vector 1")
abline(c(0,1))
constantMatrix <- dataMatrixOrdered*0
for(i in 1:dim(dataMatrixOrdered)[1]){constantMatrix[i,] <- rep(c(0,1),each=5)}
svd1 <- svd(constantMatrix)
par(mfrow=c(1,3))
image(t(constantMatrix)[,nrow(constantMatrix):1])
plot(svd1$d,xlab="Column",ylab="Singular value",pch=19)
plot(svd1$d^2/sum(svd1$d^2),xlab="Column",
ylab="Prop. of variance explained",pch=19)
set.seed(678910)
for(i in 1:40){
# flip a coin
coinFlip1 <- rbinom(1,size=1,prob=0.5)
coinFlip2 <- rbinom(1,size=1,prob=0.5)
# if coin is heads add a common pattern to that row
if(coinFlip1){
dataMatrix[i,] <- dataMatrix[i,] + rep(c(0,5),each=5)
}
if(coinFlip2){
dataMatrix[i,] <- dataMatrix[i,] + rep(c(0,5),5)
}
}
hh <- hclust(dist(dataMatrix)); dataMatrixOrdered <- dataMatrix[hh$order,]
svd2 <- svd(scale(dataMatrixOrdered))
par(mfrow=c(1,3))
image(t(dataMatrixOrdered)[,nrow(dataMatrixOrdered):1])
plot(rep(c(0,1),each=5),pch=19,xlab="Column",ylab="Pattern 1")
plot(rep(c(0,1),5),pch=19,xlab="Column",ylab="Patter
2")
svd2 <- svd(scale(dataMatrixOrdered))
par(mfrow=c(1,3))
image(t(dataMatrixOrdered)[,nrow(dataMatrixOrdered):1])
plot(svd2$v[,1],pch=19,xlab="Column",
ylab="First right singular vector")
plot(svd2$v[,2],pch=19,xlab="Column",
ylab="Second right singular vector")
svd1 <- svd(scale(dataMatrixOrdered))
par(mfrow=c(1,2))
plot(svd1$d,xlab="Column",ylab="Singular value",pch=19)
plot(svd1$d^2/sum(svd1$d^2),xlab="Column",
ylab="Percent of variance explained",pch=19)
source('D:/IES/Cursos Técnicos/Data Scientist/04_AnaliseExploratoria/11 - ReduçãoDimensões/pca_svd.R', encoding = 'UTF-8')
install.packages(rafalib)
install.packages("rafalib")
source('D:/IES/Cursos Técnicos/Data Scientist/04_AnaliseExploratoria/11 - ReduçãoDimensões/pca_svd.R', encoding = 'UTF-8')
library(devtools)
library(rafalib)
library(dagdata)
data(tissuesGeneExpression)
group <- as.fumeric(tab$Tissue)
tissuesGeneExpression
data(tissuesGeneExpression)
tissuesGeneExpression <- read.table(file = "data/tissuesGeneExpression.rda")
setwd("D:/IES/Cursos Técnicos/Data Scientist/04_AnaliseExploratoria/11 - ReduçãoDimensões")
tissuesGeneExpression <- read.table(file = "data/tissuesGeneExpression.rda")
group <- as.fumeric(tab$Tissue)
names(tissuesGeneExpression)
colnames(tissuesGeneExpression) <- "tab"
group <- as.fumeric(tab$Tissue)
tissuesGeneExpression <- read.csv(file = "data/tissuesGeneExpression.rda")
library(readr)
tissuesGeneExpression <- read_csv("D:/IES/Cursos Técnicos/Data Scientist/04_AnaliseExploratoria/11 - ReduçãoDimensões/data/tissuesGeneExpression.rda")
View(tissuesGeneExpression)
View(tissuesGeneExpression)
library(devtools)
library(rafalib)
library(dagdata)
group <- as.fumeric(tab$Tissue)
library(Biobase)
data(tissuesGeneExpression)
group <- as.fumeric(tab$Tissue)
x <- t(e)
pc <- prcomp(x)
names(pc)
plot(pc$x[, 1], pc$x[, 2], col = group, main = "PCA",
xlab = "PC1", ylab = "PC2")
cx <- sweep(x, 2, colMeans(x), "-")
sv <- svd(cx)
names(sv)
plot(sv$u[, 1], sv$u[, 2], col = group,
main = "SVD", xlab = "U1", ylab = "U2")
sv$v[1:5, 1:5]
pc$rotation[1:5, 1:5]
head(sv$d^2)
head(pc$sdev^2)
head(sv$d^2/pc$sdev^2)
ead(sv$d^2/(ncol(e) - 1))
head(sv$d^2/(ncol(e) - 1))
head(sv$d^2)
head(pc$sdev^2)
e
plot(sv$d^2/sum(sv$d^2), xlim = c(0, 15), type = "b",
pch = 16, xlab = "principal components",
ylab = "variance explained")
plot(sv$d^2/sum(sv$d^2), type = "b", pch = 16,
xlab = "principal components",
ylab = "variance explained")
svNoCenter <- svd(x)
plot(pc$x[, 1], pc$x[, 2], col = group,
main = "PCA", xlab = "PC1", ylab = "PC2")
points(0, 0, pch = 3, cex = 4, lwd = 4)
plot(svNoCenter$u[, 1], svNoCenter$u[, 2], col = group, main = "SVD not centered",
xlab = "U1", ylab = "U2")
sv2 <- svd(t(e))
plot(sv2$u[, 1], sv2$u[, 2], col = group, main = "samples vs genes (typical PCA)",
xlab = "U1", ylab = "U2")
plot(sv1$v[, 1], sv1$v[, 2], col = group, main = "genes vs samples (SVA)", xlab = "V1",
ylab = "V2")
sv1 <- svd(e)
plot(sv1$v[, 1], sv1$v[, 2], col = group, main = "genes vs samples (SVA)", xlab = "V1",
ylab = "V2")
library(devtools)
library(rafalib)
library(dagdata)
data(tissuesGeneExpression)
group <- as.fumeric(tab$Tissue)
x <- t(e) # Matrix Transpose
pc <- prcomp(x) #Principal Components Analysis
names(pc)
plot(pc$x[, 1], pc$x[, 2], col = group, main = "PCA",
xlab = "PC1", ylab = "PC2")
cx <- sweep(x, 2, colMeans(x), "-") # Sweep out Array Summaries
sv <- svd(cx)
names(sv)
plot(sv$u[, 1], sv$u[, 2], col = group,
main = "SVD", xlab = "U1", ylab = "U2")
sv$v[1:5, 1:5]
pc$rotation[1:5, 1:5]
head(sv$d^2)
head(pc$sdev^2)
head(sv$d^2/(ncol(e) - 1))
head(sv$d^2/pc$sdev^2)
plot(sv$d^2/sum(sv$d^2), xlim = c(0, 15), type = "b",
pch = 16, xlab = "principal components",
ylab = "variance explained")
plot(sv$d^2/sum(sv$d^2), type = "b", pch = 16,
xlab = "principal components",
ylab = "variance explained")
svNoCenter <- svd(x)
plot(pc$x[, 1], pc$x[, 2], col = group,
main = "PCA", xlab = "PC1", ylab = "PC2")
points(0, 0, pch = 3, cex = 4, lwd = 4)
plot(svNoCenter$u[, 1], svNoCenter$u[, 2], col = group, main = "SVD not centered",
xlab = "U1", ylab = "U2")
sv2 <- svd(t(e))
plot(sv2$u[, 1], sv2$u[, 2], col = group, main = "samples vs genes (typical PCA)",
xlab = "U1", ylab = "U2")
sv1 <- svd(e)
plot(sv1$v[, 1], sv1$v[, 2], col = group, main = "genes vs samples (SVA)", xlab = "V1",
ylab = "V2")
plot(pc$center)
pc$center
plot(pc$center[1,])
plot(pc$center[,1])
plot(pc$center[1])
plot(pc$center[1:10])
plot(pc$center[1:10], pct = 9)
plot(pc$center[1:10], pch = 9)
plot(sv1$v[, 1], sv1$v[, 2], col = group, main = "genes vs samples (SVA)", xlab = "V1",
ylab = "V2")
par(new = TRUE)
plot(pc$center[1:10], pch = 9)
pc$x
length(pc$x)
length(pc)
plot(sv1$v[, 1], sv1$v[, 2], col = group, main = "genes vs samples (SVA)", xlab = "V1",
ylab = "V2")
par(new = TRUE)
plot(pc$center[1:5], pch = 9)
plot(pc$center, pch = 9)
plot(pc$x[1:10], pch = 9)
plot(pc$x[5:15], pch = 9)
plot(pc$center, pch = 9)
plot(sv1$u, pch = 9)
plot(sv1$v, pch = 9)
head(sv$d^2/(ncol(e) - 1))
numeric(15)
pc <- pricomp(x)
pc <- princomp(x)
source('D:/Data Science/r/Clusterization/abalosCismicos.R')
setwd("D:/Data Science/r/Clusterization")
source('D:/Data Science/r/Clusterization/abalosCismicos.R')
source('D:/Data Science/r/Clusterization/abalosCismicos.R')
library("cluster")
library("ClustOfVar")
library("nnet")
eData <- read.csv("data/earthquakeData.csv")
names(eData)
dim(eData)
sapply(eData, class)
summary(eData$mag)
summary(eData$depth)
tree <- hclustvar(eData[,c(2:5)],eData[,c(6,22)])
stab <- stability(tree, graph = FALSE,B = 10)
nrCluster <- which.is.max(stab$meanCR)
nrCluster
stab$meanCR
which.is.max(stab$meanCR)
nrCluster <- which.is.max(stab$meanCR)
which.is.max(stab$meanCR)
max(stab$meanCR)
which.is.max(stab$meanCR)
which.is.max(stab$meanCR)
which.is.max(stab$meanCR)
which.is.max(stab$meanCR)
which.is.max(stab$meanCR)
which.is.max(stab$meanCR)
stab$matCR
stab$meanCR
plot(stab)
dim(eData)
stab <- stability(tree, graph = FALSE,B = 1268)
stab <- stability(tree, graph = FALSE,B = 100)
which.is.max(stab$meanCR)
which.is.max(stab$meanCR)
which.is.max(stab$meanCR)
which.is.max(stab$meanCR)
which.is.max(stab$meanCR)
which.is.max(stab$meanCR)
which.is.max(stab$meanCR)
which.is.max(stab$meanCR)
plot(stab)
which.is.max(stab$meanCR)
which.is.max(stab$meanCR)
nrCluster <- which.is.max(stab$meanCR)
nrCluster <- which.is.max(stab$meanCR)
nrCluster
plot(stab)
set.seed(1234)
plot(eData$mag, eData$depth, col = clusterModel$cluster, pch = 19, xlab = "Magnitude",
ylab = "Depth", main = "Terremotos")
clusterModel <- kmeans(iris[, 1:4], centers = 3, nstart = 100)
clusterModel
plot(eData$mag, eData$depth, col = clusterModel$cluster, pch = 19, xlab = "Magnitude",
ylab = "Depth", main = "Terremotos")
par(new=TRUE)
set.seed(1234)
clusterModel <- kmeans(iris[, 1:4], centers = 3, nstart = 100)
clusterModel
plot(eData$mag, eData$depth, col = clusterModel$cluster, pch = 19, xlab = "Magnitude",
ylab = "Depth", main = "Terremotos")
eData[clusterModel$cluster == 1, ]
pca <- princomp(eData[,c(2:5)], cor=T)
pc.comp <- pca$scores
pc.comp1 <- -1*pc.comp[,1]
pc.comp2 <- -1*pc.comp[,2]
newComp <- cbind(pc.comp1, pc.comp2)
cl <- kmeans(newComp, nrCluster)
plot(pc.comp1, pc.comp2,col=clusterModel$cluster,xlab = "Componente 1", ylab = "Componente 2",
main = "KMeans & PCA")
points(cl$centers, pch=16)
plot(pc.comp1, pc.comp2,col=clusterModel$cluster,xlab = "Componente 1", ylab = "Componente 2",
main = "KMeans & PCA")
points(cl$centers, pch=9, color = "red")
points(cl$centers, pch=9, col = "red")
plot(pc.comp1, pc.comp2,col=clusterModel$cluster,xlab = "Componente 1", ylab = "Componente 2",
main = "KMeans & PCA")
points(cl$centers, pch=12)
points(cl$centers, pch=1)
plot(pc.comp1, pc.comp2,col=clusterModel$cluster,xlab = "Componente 1", ylab = "Componente 2",
main = "KMeans & PCA")
points(cl$centers, pch=19)
setwd("D:/IES/Cursos Técnicos/Data Scientist/04_AnaliseExploratoria/CaseStudy")
pm0 <- read.table("RD_501_88101_1999-0.txt", comment.char = "#", header = FALSE, sep = "|", na.strings = "")
dim(pm0)
head(pm0)
cnames <- readLines("RD_501_88101_1999-0.txt", 1)
print(cnames)
cnames <- strsplit(cnames, "|", fixed = TRUE)
print(cnames)
names(pm0) <- make.names(cnames[[1]])
head(pm0)
x0 <- pm0$Sample.Value
class(x0)
str(x0)
summary(x0)
mean(is.na(x0))  ## Are missing values important here?
pm1 <- read.table("RD_501_88101_2012-0.txt", comment.char = "#", header = FALSE, sep = "|", na.strings = "", nrow = 1304290)
names(pm1) <- make.names(cnames[[1]])
head(pm1)
dim(pm1)
x1 <- pm1$Sample.Value
class(x1)
summary(x1)
summary(x0)
mean(is.na(x1))  ## Are missing values important here?
boxplot(x0, x1)
boxplot(log10(x0), log10(x1))
summary(x1)
negative <- x1 < 0
sum(negative, na.rm = T)
mean(negative, na.rm = T)
dates <- pm1$Date
str(dates)
dates <- as.Date(as.character(dates), "%Y%m%d")
str(dates)
hist(dates, "month")  ## Check what's going on in months 1--6
site0 <- unique(subset(pm0, State.Code == 36, c(County.Code, Site.ID)))
site1 <- unique(subset(pm1, State.Code == 36, c(County.Code, Site.ID)))
site0 <- paste(site0[,1], site0[,2], sep = ".")
site1 <- paste(site1[,1], site1[,2], sep = ".")
str(site0)
str(site1)
both <- intersect(site0, site1)
print(both)
pm0$county.site <- with(pm0, paste(County.Code, Site.ID, sep = "."))
pm1$county.site <- with(pm1, paste(County.Code, Site.ID, sep = "."))
cnt0 <- subset(pm0, State.Code == 36 & county.site %in% both)
cnt1 <- subset(pm1, State.Code == 36 & county.site %in% both)
sapply(split(cnt0, cnt0$county.site), nrow)
sapply(split(cnt1, cnt1$county.site), nrow)
pm1sub <- subset(pm1, State.Code == 36 & County.Code == 63 & Site.ID == 2008)
pm0sub <- subset(pm0, State.Code == 36 & County.Code == 63 & Site.ID == 2008)
dim(pm1sub)
dim(pm0sub)
dates1 <- pm1sub$Date
x1sub <- pm1sub$Sample.Value
plot(dates1, x1sub)
dates1 <- as.Date(as.character(dates1), "%Y%m%d")
str(dates1)
plot(dates1, x1sub)
dates0 <- pm0sub$Date
dates0 <- as.Date(as.character(dates0), "%Y%m%d")
x0sub <- pm0sub$Sample.Value
plot(dates0, x0sub)
par(mfrow = c(1, 2), mar = c(4, 4, 2, 1))
plot(dates0, x0sub, pch = 20)
abline(h = median(x0sub, na.rm = T))
plot(dates1, x1sub, pch = 20)  ## Whoa! Different ranges
abline(h = median(x1sub, na.rm = T))
rng <- range(x0sub, x1sub, na.rm = T)
rng
par(mfrow = c(1, 2), mar = c(4, 4, 2, 1))
plot(dates0, x0sub, pch = 20, ylim = rng)
abline(h = median(x0sub, na.rm = T))
plot(dates1, x1sub, pch = 20, ylim = rng)
abline(h = median(x1sub, na.rm = T))
head(pm0)
mn0 <- with(pm0, tapply(Sample.Value, State.Code, mean, na.rm = T))
str(mn0)
summary(mn0)
mn1 <- with(pm1, tapply(Sample.Value, State.Code, mean, na.rm = T))
str(mn1)
d0 <- data.frame(state = names(mn0), mean = mn0)
d1 <- data.frame(state = names(mn1), mean = mn1)
mrg <- merge(d0, d1, by = "state")
dim(mrg)
head(mrg)
par(mfrow = c(1, 1))
with(mrg, plot(rep(1, 52), mrg[, 2], xlim = c(.5, 2.5)))
with(mrg, points(rep(2, 52), mrg[, 3]))
segments(rep(1, 52), mrg[, 2], rep(2, 52), mrg[, 3])
setwd("D:/Data Science/r/CharRecognition")
text <- ocr("data/imagemExemplo4.png")
library("tesseract")
text <- ocr("data/imagemExemplo4.png")
cat(text)
text <- ocr("data/imagemExemplo4.png")
cat(text)
text <- ocr("data/imagemExemplo4.png")
cat(text)
text <- ocr("data/imagemExemplo4.png")
cat(text)
text <- ocr("data/imagemExemplo4.png")
cat(text)
text <- ocr("data/imagemExemplo4.png")
cat(text)
text <- ocr("data/imagemExemplo4.png")
cat(text)
text <- ocr("data/imagemExemplo4.png")
cat(text)
text <- ocr("data/imagemExemplo4.png")
cat(text)
text <- ocr("data/imagemExemplo4.png")
cat(text)
text <- ocr("data/imagemExemplo4.png")
cat(text)
text <- ocr("data/imagemExemplo4.png")
cat(text)
text <- ocr("data/imagemExemplo4.png")
cat(text)
text <- ocr("data/imagemExemplo4.png")
cat(text)
text <- ocr("data/imagemExemplo4.png")
cat(text)
